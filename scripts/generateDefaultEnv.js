#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const envDefaults = {
    PORT: '3001',
    NODE_ENV: 'development',
    DB_NAME: 'testDB.sqlite',
    CORS_ORIGIN: 'http://localhost:5173',
    JWT_SECRET: 'test-jwt-secret-key-for-testing-only',
    JWT_ACCESS_EXPIRES_IN: '15m',
    JWT_REFRESH_EXPIRES_IN: '30d',
    BCRYPT_ROUNDS: '12',
    DB_NAME_FOR_INSERT_MOCK_DATA: 'testDB.sqlite'
};

function createEnvFile() {
    const envPath = path.join(__dirname, '..', '.env');

    if (fs.existsSync(envPath)) {
        console.log('‚ö†Ô∏è  .env —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
        console.log('–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ npm run generate-env –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
        return;
    }

    const fullContent = `# Server Configuration
PORT=${envDefaults.PORT}
NODE_ENV=${envDefaults.NODE_ENV}

# Database Configuration
DB_NAME=${envDefaults.DB_NAME}

# CORS Configuration
CORS_ORIGIN=${envDefaults.CORS_ORIGIN}

# JWT Configuration
JWT_SECRET=${envDefaults.JWT_SECRET}
JWT_ACCESS_EXPIRES_IN=${envDefaults.JWT_ACCESS_EXPIRES_IN}
JWT_REFRESH_EXPIRES_IN=${envDefaults.JWT_REFRESH_EXPIRES_IN}

# Password Hashing
BCRYPT_ROUNDS=${envDefaults.BCRYPT_ROUNDS}

# Database for mock data (optional)
DB_NAME_FOR_INSERT_MOCK_DATA=${envDefaults.DB_NAME_FOR_INSERT_MOCK_DATA}
`;

    try {
        fs.writeFileSync(envPath, fullContent);
        console.log('‚úÖ .env —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
        console.log(`üìÅ –ü—É—Ç—å: ${envPath}`);
        console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');

        Object.entries(envDefaults).forEach(([key, value]) => {
            if (key === 'JWT_SECRET') {
                console.log(`   ${key}=${value.substring(0, 20)}...`);
            } else {
                console.log(`   ${key}=${value}`);
            }
        });

        console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û:');
        console.log('   - –ò–∑–º–µ–Ω–∏—Ç–µ JWT_SECRET –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!');
        console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env —Ñ–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ .gitignore');
        console.log('   - –ù–µ –∫–æ–º–º–∏—Ç—å—Ç–µ .env —Ñ–∞–π–ª –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π');

        console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä:');
        console.log('   npm run dev');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .env —Ñ–∞–π–ª–∞:', error.message);
        process.exit(1);
    }
}

if (require.main === module) {
    createEnvFile();
}